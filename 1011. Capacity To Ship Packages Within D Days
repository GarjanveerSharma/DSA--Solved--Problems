class Solution {
public:
    int isPossible(vector<int>& weights , int days , int capacity){
        int daycount = 1; 
        int currentload = 0; 
        for(int weight : weights){
            if(weight + currentload > capacity){
                daycount++; 
                currentload = 0; 
            }
            currentload += weight; 
        }
        return daycount <=days; 
    } 
    int shipWithinDays(vector<int>& weights, int days) {
       int low = *max_element(weights.begin() , weights.end());
       int high = accumulate(weights.begin() , weights.end() , 0);

       while(low < high){
        int mid = low + (high - low)/2; 

        if(isPossible(weights,days,mid)){
            high = mid; 
        }
        else{
            low = mid + 1; 
        }
       } 
       return low; 
    }
};
